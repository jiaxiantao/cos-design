!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports.cosDesign=t(require("react")):e.cosDesign=t(e.react)}(self,(function(e){return(()=>{"use strict";var t={297:t=>{t.exports=e}},o={};function r(e){var n=o[e];if(void 0!==n)return n.exports;var l=o[e]={exports:{}};return t[e](l,l.exports,r),l.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{r.r(n),r.d(n,{CanvasClock:()=>o});var e=r(297),t=r.n(e);const o=function(o){var r=o.width,n=void 0===r?400:r,l=o.height,i=void 0===l?400:l,a=(0,e.useRef)(null),s=function(e){e&&(e.save(),e.clearRect(0,0,200,200),e.translate(100,100),function(e){e.beginPath(),e.arc(0,0,3,0,2*Math.PI),e.stroke(),e.fillStyle="black",e.fill(),e.closePath()}(e),function(e){e.save(),e.lineWidth=1;for(var t=0;t<60;t+=1)e.rotate(2*Math.PI/60),e.beginPath(),e.moveTo(94,0),e.lineTo(100,0),e.stroke(),e.closePath();for(e.restore(),e.save(),e.lineWidth=1,t=0;t<12;t+=1)e.rotate(2*Math.PI/12),e.beginPath(),e.lineTo(90,0),e.lineTo(91,2),e.lineTo(100,2),e.arc(0,0,100,0,2*Math.PI/250),e.lineTo(100,-2),e.lineTo(91,-2),e.lineTo(90,0),e.stroke(),e.fillStyle="black",e.fill(),e.closePath();e.restore()}(e),function(e){e.save(),e.lineWidth=1;for(var t=0;t<12;t+=1)e.font="16px Arial",e.fillText((t+1).toString(),80*Math.sin(Math.PI*(t+1)/6)-8*Math.ceil(t/8)/2,-(80*Math.cos(Math.PI*(t+1)/6)-6));e.restore()}(e),function(e){var t,o={hour:(t=new Date).getHours()%12,min:t.getMinutes(),sec:t.getSeconds(),milliSec:t.getMilliseconds()},r=o.hour,n=o.min,l=o.sec,i=o.milliSec;e.save(),e.rotate(2*Math.PI/12*(r+n/60)-Math.PI/2),e.beginPath(),e.moveTo(-3,0),e.lineTo(0,3),e.lineTo(45,3),e.lineTo(50,0),e.lineTo(45,-3),e.lineTo(0,-3),e.lineTo(-3,0),e.lineWidth=1,e.strokeStyle="black",e.stroke(),e.shadowBlur=4,e.shadowColor="black",e.fillStyle="black",e.fill(),e.closePath(),e.restore(),e.save(),e.rotate(2*Math.PI/60*(n+l/60)-Math.PI/2),e.beginPath(),e.moveTo(-2,0),e.lineTo(0,2),e.lineTo(52,2),e.lineTo(60,0),e.lineTo(52,-2),e.lineTo(0,-2),e.lineTo(-2,0),e.lineWidth=1,e.strokeStyle="#1e80ff",e.stroke(),e.shadowBlur=3,e.shadowColor="#1e80ff",e.fillStyle="#1e80ff",e.fill(),e.closePath(),e.restore(),e.save(),e.rotate(2*Math.PI/60*(l-1+i/1e3)-Math.PI/2),e.beginPath(),e.moveTo(-1,0),e.lineTo(0,1),e.lineTo(60,1),e.lineTo(70,0),e.lineTo(60,-1),e.lineTo(0,-1),e.lineTo(-1,0),e.strokeStyle="#e9686b",e.stroke(),e.shadowBlur=2,e.shadowColor="#e9686b",e.fillStyle="#e9686b",e.fill(),e.closePath(),e.restore()}(e),e.restore())};return(0,e.useEffect)((function(){!function(){if(a&&a.current){var e=a.current;if(e){var t=e.getContext("2d");if(t.scale(2,2),t){var o=function(){s(t),requestAnimationFrame(o)};o()}}}}()}),[]),t().createElement("div",{className:"cos-src-components-canvasClock-style-index__canvasClock--_VPfi"},t().createElement("canvas",{ref:a,width:n,height:i,className:"cos-src-components-canvasClock-style-index__canvasTarget--cc_XR"}))}})(),n})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,